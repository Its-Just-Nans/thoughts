---
import type { GetStaticPaths, Page } from "astro";
import type { CollectionEntry } from "astro:content";
import Layout from "../layouts/Layout.astro";
import RightClickMenu from "../components/RightClickMenu.astro";
import { getAllPosts, sortMDByDate } from "../utils/posts";
import DefaultMenu from "../components/DefaultMenu.astro";
import Emoji from "../components/Emoji.astro";

export const getStaticPaths = (async ({ paginate }) => {
    const allPosts = await getAllPosts();
    const allPostsByDate = sortMDByDate(allPosts);
    return paginate(allPostsByDate, { pageSize: Infinity });
}) satisfies GetStaticPaths;

interface Props {
    page: Page<CollectionEntry<"post">>;
    uniqueTags: string[];
}

const { page } = Astro.props;

const project = "thoughts";
const site = "https://n4n5.dev";
const repo = `https://github.com/Its-Just-Nans/${project}`;
const rss = `/rss.xml`;

let idx = 0;
const g = () => {
    return project[idx++]; // crash if wrong
};

const removeAccents = (str: string) => str.normalize("NFD").replace(/[\u0300-\u036f]/g, "");
---

<Layout title="thoughts">
    <div class="inner-body">
        <div class="title-div">
            <h1 class="title">
                <a
                    class="link-title"
                    href={site}
                    target="_blank"
                    title="main website"
                    aria-label="webpage title is hidding a link to main website">{g()}</a
                >
                <span class="link-title">{g()}</span>
                <a
                    class="link-title"
                    href={rss}
                    target="_blank"
                    title="rss feed"
                    aria-label="webpage title is hidding a link to rss feed">{g() + g()}</a
                >
                <span class="link-title">{g() + g() + g()}</span>
                <a
                    class="link-title"
                    href={repo}
                    target="_blank"
                    title="github repo"
                    aria-label="webpage title is hidding a link to github repo">{g()}</a
                >
            </h1>
            <div>
                <a href="/map" target="_blank" title="map" aria-label="a link to a map" class="link-map">
                    <img src="/images/map.png" class="map-img" alt="map" />
                </a>
            </div>
        </div>
        {
            page.data.length > 0 && (
                <div>
                    <section>
                        <input id="isAll" name="selector" class="selector" type="radio" value="all" checked />
                        <input id="isWork" name="selector" class="selector" type="radio" value="work" />
                        <input id="isSchool" name="selector" class="selector" type="radio" value="school" />
                        <input id="isThought" name="selector" class="selector" type="radio" value="thought" />
                        <input id="isEvent" name="selector" class="selector" type="radio" value="event" />
                        <input id="isDev" name="selector" class="selector" type="radio" value="dev" />
                        <ul class="emoji-controller hide-emoji">
                            {page.data.map(async (p) => {
                                // const article = await p.render();
                                const slug = p.data.customSlug || p.slug;
                                return (
                                    <li
                                        class="article line-effect"
                                        class:list={[
                                            {
                                                isWork: p.data.isWork,
                                                isDev: p.data.isDev,
                                                isSchool: p.data.isSchool,
                                                isThought: p.data.isThought,
                                                isEvent: p.data.isEvent,
                                            },
                                        ]}
                                    >
                                        <a href={slug} class="article-link">
                                            <div class="link-wrap">
                                                <span class="date">
                                                    {p.data.publishDate.toISOString().slice(0, 10)}
                                                </span>
                                                <span class="link-dash">-</span>
                                                <span class="link-title">{removeAccents(p.data.title)}</span>
                                            </div>
                                        </a>
                                        <div class="emoji">
                                            <Emoji data={p.data} flex={true} />
                                        </div>
                                    </li>
                                );
                            })}
                        </ul>
                    </section>
                </div>
            )
        }
    </div>
    <RightClickMenu>
        <DefaultMenu />
    </RightClickMenu>
</Layout>

<style>
    .hide-emoji .emoji {
        display: none;
    }
    .selector {
        display: none;
    }
    .article {
        display: none;
        justify-content: space-between;
        --original-display: flex;
        margin-bottom: 10px;
    }
    #isAll:checked ~ ul .article {
        display: var(--original-display);
    }
    #isWork:checked ~ ul .isWork {
        display: var(--original-display);
    }
    #isThought:checked ~ ul .isThought {
        display: var(--original-display);
    }
    #isEvent:checked ~ ul .isEvent {
        display: var(--original-display);
    }
    #isSchool:checked ~ ul .isSchool {
        display: var(--original-display);
    }
    #isDev:checked ~ ul .isDev {
        display: var(--original-display);
    }
    .title {
        display: inline-flex;
    }
    .link-title {
        color: inherit;
        text-decoration: inherit;
    }
    .title-div {
        display: flex;
        justify-content: space-around;
        align-items: center;
    }
    .date {
        /* monospaced font */
        font-family: "Courier New", Courier, monospace;
        font-size: 0.8em;
    }
    .inner-body {
        padding: 0 20px;
        margin: auto;
        max-width: 800px;
    }
    .line-effect::before {
        content: " ";
        transform: scaleX(0);
        transform-origin: bottom right;
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        inset: 0 0 0 0;
        background: Gainsboro;
        z-index: -1;
        transition: transform 0.3s ease;
    }
    .line-effect:hover::before {
        transform: scaleX(1);
        transform-origin: bottom left;
    }
    .line-effect {
        width: auto;
        position: relative;
    }
    .hide-emoji .line-effect {
        width: fit-content;
    }
    .article-link {
        color: black;
        -webkit-tap-highlight-color: transparent;
        flex: 1;
        text-decoration: none;
        display: inline-block;
        text-transform: lowercase;
    }
    .map-img {
        width: 32px;
        height: 32px;
    }
    .link-map {
        -webkit-tap-highlight-color: transparent;
    }

    @media screen and (max-width: 800px) {
        ul {
            padding-inline-start: 15px;
        }
    }
</style>
